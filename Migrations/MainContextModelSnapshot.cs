// <auto-generated />
using System;
using Entity6._0Solution.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entity6._0Solution.Migrations
{
    [DbContext(typeof(MainContext))]
    partial class MainContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Entity6._0Solution.Models.Doctor", b =>
                {
                    b.Property<int>("IdDoctor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDoctor"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdDoctor");

                    b.ToTable("Doctor");

                    b.HasData(
                        new
                        {
                            IdDoctor = 1,
                            Email = "DS",
                            FirstName = "First Standard",
                            LastName = "X@"
                        },
                        new
                        {
                            IdDoctor = 2,
                            Email = "FG",
                            FirstName = "Second Standard",
                            LastName = "X"
                        },
                        new
                        {
                            IdDoctor = 3,
                            Email = "WS",
                            FirstName = "Third Standard",
                            LastName = "XX"
                        });
                });

            modelBuilder.Entity("Entity6._0Solution.Models.Medicament", b =>
                {
                    b.Property<int>("IdMedicament")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMedicament"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdMedicament");

                    b.ToTable("Medicament");

                    b.HasData(
                        new
                        {
                            IdMedicament = 1,
                            Description = "xxxsas sdssX@",
                            Name = "Apap",
                            Type = "X@"
                        },
                        new
                        {
                            IdMedicament = 2,
                            Description = "lorem ipsum",
                            Name = "Ibuprom",
                            Type = "X@"
                        });
                });

            modelBuilder.Entity("Entity6._0Solution.Models.Patient", b =>
                {
                    b.Property<int>("IdPatient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPatient"), 1L, 1);

                    b.Property<DateTime>("Birthday")
                        .HasMaxLength(100)
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdPatient");

                    b.ToTable("Patient");

                    b.HasData(
                        new
                        {
                            IdPatient = 1,
                            Birthday = new DateTime(1995, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "First Standard",
                            LastName = "X@"
                        },
                        new
                        {
                            IdPatient = 2,
                            Birthday = new DateTime(1995, 11, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Second Standard",
                            LastName = "X"
                        },
                        new
                        {
                            IdPatient = 3,
                            Birthday = new DateTime(1995, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Third Standard",
                            LastName = "XX"
                        });
                });

            modelBuilder.Entity("Entity6._0Solution.Models.Prescription", b =>
                {
                    b.Property<int>("IdPresciption")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPresciption"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdDoctor")
                        .HasColumnType("int");

                    b.Property<int>("IdPatient")
                        .HasColumnType("int");

                    b.HasKey("IdPresciption");

                    b.HasIndex("IdDoctor");

                    b.HasIndex("IdPatient");

                    b.ToTable("Prescription");

                    b.HasData(
                        new
                        {
                            IdPresciption = 1,
                            Date = new DateTime(1895, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DueDate = new DateTime(1895, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDoctor = 2,
                            IdPatient = 1
                        },
                        new
                        {
                            IdPresciption = 2,
                            Date = new DateTime(2005, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DueDate = new DateTime(1295, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDoctor = 1,
                            IdPatient = 1
                        });
                });

            modelBuilder.Entity("Entity6._0Solution.Models.Prescription_Medicament", b =>
                {
                    b.Property<int>("IdPrescription")
                        .HasColumnType("int");

                    b.Property<int>("IdMedicament")
                        .HasColumnType("int");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Dose")
                        .HasColumnType("int");

                    b.HasKey("IdPrescription", "IdMedicament");

                    b.HasIndex("IdMedicament");

                    b.ToTable("Prescription_Medicament");

                    b.HasData(
                        new
                        {
                            IdPrescription = 1,
                            IdMedicament = 1,
                            Details = "Str",
                            Dose = 1
                        },
                        new
                        {
                            IdPrescription = 2,
                            IdMedicament = 2,
                            Details = "Txr",
                            Dose = 2
                        });
                });

            modelBuilder.Entity("Entity6._0Solution.Models.Prescription", b =>
                {
                    b.HasOne("Entity6._0Solution.Models.Doctor", "Doctor")
                        .WithMany("Presciptions")
                        .HasForeignKey("IdDoctor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity6._0Solution.Models.Patient", "Patient")
                        .WithMany("presciptions")
                        .HasForeignKey("IdPatient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("Entity6._0Solution.Models.Prescription_Medicament", b =>
                {
                    b.HasOne("Entity6._0Solution.Models.Medicament", "Medicament")
                        .WithMany("Prescription_Medicaments")
                        .HasForeignKey("IdMedicament")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity6._0Solution.Models.Prescription", "Presciption")
                        .WithMany("Medicaments")
                        .HasForeignKey("IdPrescription")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicament");

                    b.Navigation("Presciption");
                });

            modelBuilder.Entity("Entity6._0Solution.Models.Doctor", b =>
                {
                    b.Navigation("Presciptions");
                });

            modelBuilder.Entity("Entity6._0Solution.Models.Medicament", b =>
                {
                    b.Navigation("Prescription_Medicaments");
                });

            modelBuilder.Entity("Entity6._0Solution.Models.Patient", b =>
                {
                    b.Navigation("presciptions");
                });

            modelBuilder.Entity("Entity6._0Solution.Models.Prescription", b =>
                {
                    b.Navigation("Medicaments");
                });
#pragma warning restore 612, 618
        }
    }
}
